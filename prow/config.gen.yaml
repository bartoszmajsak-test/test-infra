#======================================
# This configuration is auto-generated. 
# To update:
#    Modify files in the config directory
#    Run gen-config.sh to regenerate.
#======================================
deck:
  spyglass:
    size_limit: 500000000  # 500 MB
    gcs_browser_prefix: https://patchset.io/gcs/
    lenses:
    - lens:
        name: metadata
      required_files:
      - started.json|finished.json
      optional_files:
      - podinfo.json
    - lens:
        name: buildlog
        config:
          highlight_regexes:
          - timed out
          - 'ERROR:'
          - (FAIL|Failure \[)\b
          - panic\b
          - ^E\d{4} \d\d:\d\d:\d\d\.\d\d\d]
      required_files:
      - build-log.txt
    - lens:
        name: junit
      required_files:
      - artifacts/junit.*\.xml
    - lens:
        name: podinfo
      required_files:
      - podinfo.json

plank:
  job_url_prefix_config:
    '*': "https://patchset.io/view/"
  default_decoration_configs:
    '*':
      timeout: 4h
      grace_period: 15s
      utility_images:
        clonerefs: "gcr.io/k8s-prow/clonerefs:v20211019-5763223177"
        initupload: "gcr.io/k8s-prow/initupload:v20211019-5763223177"
        entrypoint: "gcr.io/k8s-prow/entrypoint:v20211019-5763223177"
        sidecar: "gcr.io/k8s-prow/sidecar:v20211019-5763223177"
      gcs_configuration:
        path_strategy: explicit
        bucket: "patchset-demo"
      gcs_credentials_secret: "gcs-credentials"
  pod_unscheduled_timeout: 6h
  pod_pending_timeout: 6h

postsubmits:

  bartoszmajsak-test/template-golang:
    - name: patchset-updater
      decorate: true
      decoration_config:
        skip_cloning: true
      always_run: true
      optional: false
      skip_submodules: true
      branches:
        - ^release-.*$
      spec:
        containers:
          - image: "quay.io/bmajsak/prow-create-patches:latest"
            imagePullPolicy: Always
            env:
              # TODO: take from secrets
              - name: "GITHUB_TOKEN"
                value: "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" #
              - name: "GIT_USER"
                value: "bartoszmajsak-test"
              - name: "GIT_EMAIL"
                value: "bartoszmajsak+test@gmail.com"
            command: ["create-patches"]
            args:
            - "--repo=github.com/bartoszmajsak-test/template-golang"
            - "--patchset=github.com/bartoszmajsak-test/patchset"
            - "--main=master"
            - "--dev=release-2.1" ## TODO how to get the branch name?
            ## TODO after updating patchset run verification?
  
    - name: patchset-verifier
      decorate: true
      decoration_config:
        skip_cloning: true
      always_run: true
      optional: false
      skip_submodules: true
      branches:
        - ^master$
      spec:
        containers:
          - image: "quay.io/bmajsak/prow-check-conflicts:latest"
            imagePullPolicy: Always
            env:
              # TODO: take from secrets
              - name: "GITHUB_TOKEN"
                value: "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" #
              - name: "GIT_USER"
                value: "bartoszmajsak-test"
              - name: "GIT_EMAIL"
                value: "bartoszmajsak+test@gmail.com"
            command: ["check-conflicts"]
            args:
            - "--repo=github.com/bartoszmajsak-test/template-golang"
            - "--patchset=github.com/bartoszmajsak-test/patchset"
            - "--main=master"
            - "--dev=release-2.1" ## TODO how to get the branch name?

presubmits:

  bartoszmajsak-test/template-golang:
    - name: patch-fix-validation
      trigger: "(?m)^/resolved"
      rerun_command: "/resolved"
      decorate: true
      always_run: false
      optional: false
      spec:
        containers:
          - image: "quay.io/bmajsak/prow-validate-resolution:latest"
            imagePullPolicy: Always
            env:
              # TODO: take from secrets
              - name: "GITHUB_TOKEN"
                value: "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"
              - name: "GIT_USER"
                value: "bartoszmajsak-test"
              - name: "GIT_EMAIL"
                value: "bartoszmajsak+test@gmail.com"
            command: ["validate-resolution"]
            args:
              - "--repo=github.com/bartoszmajsak-test/template-golang"
              - "--patchset=github.com/bartoszmajsak-test/patchset"
              - "--main=master"
prowjob_namespace: prow
pod_namespace: prow-workers

sinker:
  resync_period: 1h
  max_prowjob_age: 168h
  max_pod_age: 6h

github_reporter:
  job_types_to_report:
  - presubmit
  - postsubmit

